{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACqC;AACM;;AAE3C;AACO;;AAEP;AACO;AACP;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACO;;AAEP;AACO;AACP;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACO;AACP;AACA;;AAEA;;AAEA;AACO;AACP;AACA;AACA,sBAAsB,kDAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wDAAW;AAChC,KAAK;AACL;AACA,GAAG;AACH;AACA;;AAEA;AACO;AACP;AACA;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;;;;;;;;ACxHA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC0C;AACC;AACD;;AAE1C;AACO;;AAEP;AACO;AACP;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACO;;AAEP;AACO;AACP;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACO;AACP;AACA;;AAEA;;AAEA;AACe;AACf;AACA;AACA,mBAAmB,qDAAa;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,YAAY,aAAa,aAAa;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,KAAK;AAClD;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5HA;AACe;AACf;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UCTA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC0C;AACe;AAGnC;AACe;AACS;AACH;AACT;AACU;AACA;AACH;AACK;AACI;AACG;AACF;AACI;AAClC;AAC+B;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,gEAAY;;AAE1B;AACA;AACA,EAAE,0DAAa,KAAK,qDAAQ;AAC5B,CAAC;;AAED,yCAAyC,uDAAgB;;AAEzD,yCAAyC,+DAAc;;AAEvD,4CAA4C,2DAAc;;AAE1D,+CAA+C,kEAAiB;;AAEhE,6CAA6C,gEAAe;;AAE5D,gDAAgD,oEAAmB","sources":["webpack://todos/./src/createtodo.js","webpack://todos/./src/displayControl.js","webpack://todos/./src/newProject.js","webpack://todos/./src/projectClass.js","webpack://todos/./src/toDoclass.js","webpack://todos/webpack/bootstrap","webpack://todos/webpack/runtime/compat get default export","webpack://todos/webpack/runtime/define property getters","webpack://todos/webpack/runtime/hasOwnProperty shorthand","webpack://todos/webpack/runtime/make namespace object","webpack://todos/./src/index.js"],"sourcesContent":["/* eslint-disable no-sequences */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable operator-linebreak */\n/* eslint-disable prefer-template */\n/* eslint-disable no-undef */\n/* eslint-disable new-cap */\n/* eslint-disable no-use-before-define */\n/* eslint-disable no-plusplus */\n/* eslint-disable import/no-mutable-exports */\n/* eslint-disable import/no-cycle */\n// imported functions\nimport toDoCreate from './toDoclass';\nimport { removeATask } from './newProject';\n\n// counter for todo values\nexport let IC = localStorage.getItem('indexC');\n\n// check for counter values\nexport function checkCounter() {\n  if (Number.isNaN(IC)) {\n    IC = 0;\n  } else {\n    ++IC;\n  }\n\n  localStorage.setItem('indexC', IC);\n  return IC;\n}\n\n// declaring masterlist map to hold todo tasks\nexport let masterList = new Map();\n\n// checks localStorage and sets it up\nexport function checkMapList() {\n  const storage = localStorage.getItem('MLToDo');\n  let masterL;\n\n  if (storage !== null) masterL = new Map(JSON.parse(localStorage.MLToDo));\n\n  if (masterL === undefined) {\n    masterList = new Map();\n  } else {\n    masterList = masterL;\n  }\n\n  repopulateTask();\n}\n\n// adds todos to localStorage\nexport function addLSTODO() {\n  localStorage.MLToDo = JSON.stringify(Array.from(masterList));\n}\n\ncheckMapList();\n\n// creates a new todo from the class constructor\nexport function createNewToDo(e) {\n  e.preventDefault();\n  checkCounter();\n  const newTask = new toDoCreate();\n  newTask.title = TDTitle.value;\n  newTask.description = TDDescrip.value;\n  newTask.dueDate = TDDueDate.value;\n  newTask.priority = TDPriority.value;\n  newTask.project = addToProject.value;\n  masterList.set(IC, newTask);\n  repopulateTask();\n}\n\n// repopulates todos on the html page\nexport function repopulateTask() {\n  toDoSection.innerHTML = '';\n  masterList.forEach((values, keys) => {\n    const newSection = document.createElement('div');\n    newSection.id = keys;\n    newSection.classList.add('ToDoListing');\n    newSection.innerHTML =\n      values.title +\n      '<p>' +\n      values.description +\n      '<p>' +\n      values.dueDate +\n      '<p>' +\n      values.priority;\n    toDoSection.appendChild(newSection);\n    const changePrioritySection = document.createElement('div');\n    changePrioritySection.classList.add('PriorityBtn');\n    changePrioritySection.innerHTML = priorityOptions.innerHTML;\n    changePrioritySection.id = keys;\n    changePrioritySection.addEventListener('change', (e) => prioritySwitch(e));\n    newSection.appendChild(changePrioritySection);\n    const deleteSection = document.createElement('div');\n    deleteSection.classList.add('deleteToDoBtn');\n    deleteSection.id = values.project;\n    deleteSection.innerHTML = '<button id =' + keys + '>Delete Task?</button>';\n    deleteSection.addEventListener('click', (e) => {\n      taskdelete(e), removeATask(e);\n    });\n    newSection.appendChild(deleteSection);\n  });\n  addLSTODO();\n}\n\n// function that handles deleting tasks\nexport function taskdelete(e) {\n  const deleteID = parseInt(e.target.id, 10);\n  masterList.delete(deleteID);\n  repopulateTask();\n}\n\n// function that handles changing the priority\nexport function prioritySwitch(e) {\n  e.preventDefault();\n  const priorityValue = e.target.value;\n  const keyValue = parseInt(e.target.parentElement.id, 10);\n  masterList.set(keyValue, {\n    ...masterList.get(keyValue),\n    priority: priorityValue,\n  });\n  repopulateTask();\n}\n","/* eslint-disable space-before-blocks */\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n\n// imported image for bg\n// import paperTexture from './asset/papertexture.jpg';\n\n// const paperBG = new Image();\n// paperBG.src = paperTexture;\n\nexport function displayHomeTab(e) {\n  e.preventDefault();\n  toDoCover.style.display = 'block';\n  toDoCreation.style.display = 'none';\n  createProjects.style.display = 'none';\n  toDoWrap.style.display = 'none';\n  projectSection.style.display = 'none';\n  mainContainer.style.backgroundImage = '';\n}\n\nexport default function displayTaskAdd(e) {\n  e.preventDefault();\n  toDoCover.style.display = 'none';\n  toDoCreation.style.display = 'block';\n  createProjects.style.display = 'none';\n  toDoWrap.style.display = 'none';\n  projectSection.style.display = 'none';\n  mainContainer.style.backgroundImage = '';\n}\n\nexport function displayProjectTab(e) {\n  e.preventDefault();\n  toDoCover.style.display = 'none';\n  toDoCreation.style.display = 'none';\n  createProjects.style.display = 'block';\n  toDoWrap.style.display = 'none';\n  projectSection.style.display = 'none';\n  mainContainer.style.backgroundImage = '';\n}\n\nexport function displayTaskList(e){\n  e.preventDefault();\n  toDoCover.style.display = 'none';\n  toDoCreation.style.display = 'none';\n  createProjects.style.display = 'none';\n  toDoWrap.style.display = 'block';\n  projectSection.style.display = 'none';\n  mainContainer.style.backgroundImage = paperBG;\n  mainContainer.style.backgroundSize = 'cover';\n}\n\nexport function displayProjectLists(e){\n  e.preventDefault();\n  toDoCover.style.display = 'none';\n  toDoCreation.style.display = 'none';\n  createProjects.style.display = 'none';\n  toDoWrap.style.display = 'none';\n  projectSection.style.display = 'block';\n  mainContainer.style.backgroundImage = paperBG;\n  mainContainer.style.backgroundSize = 'cover';\n}\n","/* eslint-disable no-console */\n/* eslint-disable no-useless-concat */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable no-undef */\n/* eslint-disable new-cap */\n/* eslint-disable no-use-before-define */\n/* eslint-disable no-plusplus */\n/* eslint-disable import/no-mutable-exports */\n/* eslint-disable import/no-duplicates */\n/* eslint-disable no-unused-vars */\n/* eslint-disable import/no-cycle */\n// imported functions and maps\nimport { masterList } from './createtodo';\nimport projectCreate from './projectClass';\nimport { taskdelete } from './createtodo';\n\n// counter for project values\nexport let ICP = localStorage.getItem('indexCP');\n\n// check for counter values\nexport function checkCounterP() {\n  if (Number.isNaN(ICP)) {\n    ICP = 0;\n  } else {\n    ++ICP;\n  }\n\n  localStorage.setItem('indexCP', ICP);\n  return ICP;\n}\n\n// declaring masterlist map to hold projects\nexport let masterPList = new Map();\n\n// checks localStorage and sets it up\nexport function checkMapPList() {\n  const storage = localStorage.getItem('mlp');\n  let masterLP;\n\n  if (storage !== null) masterLP = new Map(JSON.parse(localStorage.mlp));\n\n  if (masterLP === undefined) {\n    masterPList = new Map();\n  } else {\n    masterPList = masterLP;\n  }\n\n  repopulateProjects();\n}\n\n// adds projects to localStorage\nexport function addLSP() {\n  localStorage.mlp = JSON.stringify(Array.from(masterPList));\n}\n\ncheckMapPList();\n\n// creates a new project from the class constructor\nexport default function createNewProject(e) {\n  e.preventDefault();\n  checkCounterP();\n  const newP = new projectCreate();\n  newP.name = TDProject.value;\n  newP.tasks = [];\n  masterPList.set(ICP, newP);\n  repopulateProjects();\n  TDProject.value = '';\n}\n\n// repopulates projects on the html page\nexport function repopulateProjects() {\n  projectSection.innerHTML = '';\n  addToProject.innerHTML = '';\n  const blankSection = document.createElement('option');\n  blankSection.textContent = '';\n  addToProject.appendChild(blankSection);\n  masterPList.forEach((values, keys) => {\n    const newProjectSection = document.createElement('div');\n    newProjectSection.id = keys;\n    newProjectSection.classList.add('projectLists');\n    newProjectSection.innerHTML = `${values.name}<p>` + `<p>${values.tasks}`;\n    projectSection.appendChild(newProjectSection);\n    const projectOption = document.createElement('option');\n    projectOption.textContent = values.name;\n    projectOption.value = keys;\n    projectOption.id = values.name;\n    addToProject.appendChild(projectOption);\n    const projectDelete = document.createElement('div');\n    projectDelete.id = keys;\n    projectDelete.innerHTML = `<button id =${keys}>Delete Project?</button>`;\n    projectDelete.addEventListener('click', (e) => deleteProject(e));\n    newProjectSection.appendChild(projectDelete);\n  });\n  addLSP();\n}\n\n// function that handles when a new todo is added to a project\nexport function addTasks(e) {\n  e.preventDefault();\n  const projectValue = parseInt(addToProject.value, 10);\n  const temp = masterPList.get(projectValue);\n  const taskName = TDTitle.value;\n  temp.tasks.push(taskName);\n  masterPList.set(projectValue, temp);\n  repopulateProjects();\n}\n\n// function that handles updating projects when a task is deleted\nexport function removeATask(e) {\n  e.preventDefault();\n  const projectValue = parseInt(e.target.parentElement.id, 10);\n  const taskValue = parseInt(e.target.id, 10);\n  const temp = masterPList.get(projectValue);\n  temp.tasks.splice(taskValue, 1);\n  masterPList.set(projectValue, temp);\n  repopulateProjects();\n}\n\n// function that handles deleting projects\nexport function deleteProject(e) {\n  e.preventDefault;\n  const projectValue = parseInt(e.target.id, 10);\n  masterPList.delete(projectValue);\n  repopulateProjects();\n}\n","// class constructor for the projects\nexport default class projectCreate {\n  constructor(name, description, tasks) {\n    this.name = name;\n    this.tasks = tasks;\n  }\n}\n","// class constructor for the todos\nexport default class toDoCreate {\n  constructor(title, description, dueDate, priority, project) {\n    this.title = title;\n    this.description = description;\n    this.dueDate = dueDate;\n    this.priority = priority;\n    this.project = project;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable no-sequences */\n/* eslint-disable max-len */\n/* eslint-disable import/no-duplicates */\n/* eslint-disable import/named */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-unused-expressions */\n// global variables\n// imported variables and functions\nimport { masterList } from './createtodo';\nimport { createNewToDo, taskdelete } from './createtodo';\nimport createNewProject, {\n  projectCounter, masterPList, repopulateProjects, addTasks, ICP, checkCounterP, checkMapPList, addLSP, repopulatePStorage,\n} from './newProject';\nimport toDoCreate from './toDoclass';\nimport { repopulateTask } from './createtodo';\nimport projectCreate from './projectClass';\nimport { IC } from './createtodo';\nimport { checkCounter } from './createtodo';\nimport { checkMapList } from './createtodo';\nimport { addLSTODO } from './createtodo';\nimport displayTaskAdd from './displayControl';\nimport { displayHomeTab } from './displayControl';\nimport { displayProjectTab } from './displayControl';\nimport { displayTaskList } from './displayControl';\nimport { displayProjectLists } from './displayControl';\nimport './style.css';\nimport paperTexture from './asset/papertexture.jpg';\n\nconst submitB = document.getElementById('submitB');\nconst TDTitle = document.getElementById('TDTitle');\nconst TDDescrip = document.getElementById('TDDescrip');\nconst TDDueDate = document.getElementById('TDDueDate');\nconst TDPriority = document.getElementById('TDPriority');\nconst checkLog = document.getElementById('checkLogs');\nconst submitP = document.getElementById('submitP');\nconst TDProject = document.getElementById('TDProject');\nconst toDoSection = document.getElementById('toDoSection');\nconst projectSection = document.getElementById('projectSection');\nconst priorityOptions = document.getElementById('priorityOptions');\nconst deleteTask = document.getElementById('deleteToDoBtn');\nconst addToProject = document.getElementById('addToProject');\nconst toDoCreation = document.getElementById('toDoCreation');\nconst toDoCover = document.getElementById('toDoCover');\nconst createProjects = document.getElementById('createProjects');\nconst mainContainer = document.getElementById('mainContainer');\nconst toDoWrap = document.getElementById('toDoWrap');\n\nconst homeTab = document.getElementById('homeTab');\nconst tabTaskAdd = document.getElementById('taskAdd');\nconst tabProjectAdd = document.getElementById('projectAdd');\nconst tabTaskList = document.getElementById('taskList');\nconst tabProjectList = document.getElementById('projectList');\n\nconst paperBG = new Image();\npaperBG.src = paperTexture;\n\n// event listeners\nsubmitB.addEventListener('click', (e) => {\n  createNewToDo(e), addTasks(e);\n});\n\nsubmitP.addEventListener('click', (e) => createNewProject(e));\n\nhomeTab.addEventListener('click', (e) => displayHomeTab(e));\n\ntabTaskAdd.addEventListener('click', (e) => displayTaskAdd(e));\n\ntabProjectAdd.addEventListener('click', (e) => displayProjectTab(e));\n\ntabTaskList.addEventListener('click', (e) => displayTaskList(e));\n\ntabProjectList.addEventListener('click', (e) => displayProjectLists(e));\n"],"names":[],"sourceRoot":""}